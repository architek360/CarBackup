/*!
 * cartier.login.js
 *  This file contains functionalities handling the login module
 *
 * @project   cartier mobile
 * @date      2014-01-03
 * @author    Sapient 
 * @licensor  cartier mobile
 * @site      cartier mobile
   @dependency cartier.core.js
 * @ NOTE:
    This file has the following sequence of the actions
    1) Declare all the private variables
    2) caching jquery wrapper objects and messages
  $last) call to init() method
 */

;
(function(win, $, login, undefined) {
	//this will cause the browser to check for errors more aggressively
	'use strict';

	//check if jquery is defined, else return
	if (typeof $ === 'undefined') {
		console.log('jQuery not found');
		return false;
	}

	var _cache = {},
		_objPropertiesMsg,
		_objPropertiesPaths;


	//--------------------------------------------------------------------------------------------------------
	//         Caching jQuery object
	//--------------------------------------------------------------------------------------------------------

	/*
      @private method : caching jquery objects 
      @param : none 
    */
	var _cacheObjects = function() {
		_cache = {
			$mainContainer: $('.main-container'),
			$bodyWrapper: $('.body-wrapper'),
			$loginButton: $('.js-login-button'),
			$forgotPassLink: $('.js-forgotpass-link'),
			$forgotPassWrapper: $('.js-forgotpassword'),
			$forgotCancel: $('.js-forgot-cancel'),
			$forgotSend: $('.js-forgot-send'),
			$emailSendBox: $('.js-emailsent-box'),
			$emailSentConf: $('.js-emailsent-conf'),
			$successDiv: $('.js-successdiv'),
			$failureDiv: $('.js-failurediv'),
			$errorMessage: $('.js-checkerror .errormessage'),
			$createYourAcc: $('.js-createyouraccount'),
			$showPassword: $('.js-show-password'),
			$passwordInput: $('.js-password-input'),
			$loginError: $('.loginerror.error'),
			$loginDropdown: $('.js-login-dropdown'),
			$jsLoginBox: $('.js-login-box'),
			$jsLoginBoxLi: $('.js-login-box__list li'),
			$jsLoginBoxLiForgotPass: $('.js-login-box__list li:nth-child(3)'),
			$countrySelectorSelect: $('#js-login-form .js-login-dropdown #countryselector'),
			$countrySelectorSelect2: $('.js-regform-step1 .country-selector_select'),
			$confirmBoxOkButton: $('#confirmButtons button'),
			$countryOfResiText: $('.js-cor'),
			$loginAjaxbutton: $('.js-login-ajax-button'),
			$registraionFormServerError: $('.js-create-account-open'),
			$guestCheckOut: $('.js-guest-checkout'),
			$forgotPasswordSendButton: $('.js-forgotpassword .button-wrapper.Send'),
			$passwordCheckButton: $('.login-box .js-password-input'),
			$loginBoxListInput: $('.login-box__list div.form-input'),
			$closeButton: $('.js-close'),


			// Short Markups
			$errorDivMarkup: $("<div class='error-div' style='display:block;'></div>"),
			$countryforReg: $('#js-reg-step-1 #fn_country')

		};

	},

		//--------------------------------------------------------------------------------------------------------
		//          EVENT Bindings
		//--------------------------------------------------------------------------------------------------------

		/*
          @private method : bind events
          @param : none
        */

		_bindEvents = function() {
			_cache.$forgotPassLink.on('click', _forgotPasswordLinkHandler);
			_cache.$forgotCancel.on('click', _forgotPasswordCancelHandler);
			_cache.$forgotSend.on('click', _forgotPasswordSendHandler);
			_cache.$emailSentConf.on('click', _forgotPasswordEmailHandler);
			_cache.$countrySelectorSelect.on('change', _countrySelectorAjaxCallHandler);
			_cache.$countrySelectorSelect2.on('change', _countrySelectorAjaxCallHandler2);
			_cache.$guestCheckOut.on('click', _guestCheckOutHandler);
			_cache.$forgotPasswordSendButton.on('click', _forgotPasswordCallback);
			_cache.$passwordCheckButton.on('change keyup blur', _checkPasswordError);
			_cache.$countryforReg.on('change', _countrySelectorAjaxCallHandlerReg)

		},


		//--------------------------------------------------------------------------------------------------------
		//          EVENT HANDLERS
		//--------------------------------------------------------------------------------------------------------

		_guestCheckOutHandler = function(e) {
			e.preventDefault();

			var objXHR = cartier.ajaxWrapper.getXhrObj({
				type: 'POST',
				url: _objPropertiesPaths.bagCheckout,
				data: 'currentPage=' + $('.currentPagePath').val() + '&successPage=' + $('.successPagePath').val(),
				dataType: 'json',
				contentType: 'application/x-www-form-urlencoded'
			});
			if (objXHR) {
				objXHR.done(function(data) {
					// handle failure
					if (typeof data.success !== 'undefined' && !data.success) {

					} else { // handle success
						var data = cartier.common.cartierJSONparser({
							json: data
						});
						if (data.isErrorMessageVisible) {
							$('.error-div').remove();
							$('.js-guest-checkout').before('<div class="error-div">' + data.errorMessage + '</div>');
						}
					}
				});
			}
			return false;
		},


		/*
          @private method : forgot Password Email Handler function
          @param : e :-default event param
        */

		_forgotPasswordEmailHandler = function(e) {
			e.preventDefault();
			_displayHandler('js-login-box', 'js-emailsent-box', 'js-forgotpass-box');
		},
		/*
          @private method : forgot Password Send Handler function
          @param : e :-default event param
        */

		_forgotPasswordSendHandler = function(e) {
			e.preventDefault();
			$(this).before('<div class="loaderDiv ">' + '' + '</div>');
			$('.loaderDiv').addLoader();
			_sendPostRequest($(this).closest('form'), _objPropertiesPaths.loginForgotPass, function(data) {
				_displayHandler('js-emailsent-box', 'js-login-box', 'js-forgotpass-box');

				if (data.wasEmailSent) {
					_cache.$successDiv.removeClass('display-none');
					_cache.$failureDiv.addClass('display-none');
				} else {
					_cache.$failureDiv.removeClass('display-none');
					_cache.$successDiv.addClass('display-none');
				}
			});
		},
		/*
          @private method : forgot Password Link Handler function
          @param : e :-default event param
        */

		_forgotPasswordLinkHandler = function(e) {
			e.preventDefault();
			_displayHandler('js-forgotpass-box', 'js-emailsent-box', 'js-login-box');
		},
		/*
          @private method : forgot Password Cancel Handler function
          @param : none 
        */

		_forgotPasswordCancelHandler = function(e) {
			e.preventDefault();
			_displayHandler('js-login-box', 'js-emailsent-box', 'js-forgotpass-box');
		},

		/*
	       @private method : To Handle display logic for _forgotPasswordEmailHandler 
	       @param : classone, classtwo, classthree 
	    */
		_displayHandler = function(classone, classtwo, classthree) {
			$('.' + classone).removeClass('display-none');
			$('.' + classtwo).addClass('display-none');
			$('.' + classthree).addClass('display-none');
		},


		/*
           @private method : To Handle display logic, If the website is in .com domain.
                             To hide standard Login elements
           @param : none
        */
		_hideLoginElements = function() {
			_cache.$jsLoginBoxLi.hide();
		},


		/*
           @private method : To Handle display logic, If the website is in .com domain.
           @param :  none
        */
		_dotComHandler = function() {
			_hideLoginElements();
			_cache.$countrySelectorSelect.show();
			_cache.$countryOfResiText.show();
		},


		/*
           @private method : To Handle display logic, If after Selecting Country, no URL is available
           @param : none
        */

		_noWebsiteHandler = function() {
			$('.js-login-input-section').removeClass('display-none');
			_cache.$jsLoginBoxLi.show();
			_cache.$countrySelectorSelect.show();
			_cache.$countryOfResiText.show();

			$('.js-dotcomcheck').removeClass('display-none');
			$('.Connection').removeClass('display-none');
		},


		/*
           @private method : To Handle display logic, If Default value is selected
           @param : classone, classtwo, classthree 
        */
		_ifSelectDefaultValueHandler = function() {
			_hideLoginElements();
			_cache.$countrySelectorSelect.show();
			_cache.$countryOfResiText.show();
		},



		/*
          @private method : To display Popup Box for Website Redirect on selecting country of residence
          @param : redirectUrl will be the Url on which the site will be redirected when OK button is clicked on confirm Popup 
        */

		_saveButtonAjaxCallBack = function(redirectUrl) {

			_cache.$countrySelectorSelect.confirmBox();
			_cache.$countrySelectorSelect.data('plugin_confirmBox').popupInitialize({
					'title': _objPropertiesMsg.countrySelectorTitle,
					'message': _objPropertiesMsg.countrySelectorMsg,
					'buttons': {
						'ok': {
							'buttonName': _objPropertiesMsg.yesButton,
							'href': redirectUrl,
							'class': 'cta-button cta-button__inner cta--red'

						},
						'cancel': {
							'buttonName': _objPropertiesMsg.noButton,
							'href': '#',
							'class': 'cta-button cta-button__inner cta--grey display-none js-canclebutton'
						}

					}
				},
				_cache.$countrySelectorSelect.data('plugin_confirmBox').confirmHide

			);

			$('.popup-close-button').on('click', function(){
				$('.js-canclebutton').trigger('click');
			});

			$($('#confirmButtons button')[0]).on('click', function() {

				if (typeof $('.body-wrapper').data('plugin_analytics') !== 'undefined') {
					$('.body-wrapper').data('plugin_analytics').alreadyRegisteredContinue();
				}

				location.href = '' + $(this).attr('href') + '';
			});
		},

		/*
	       	@private method : Callback Function for Login Captcha AjaxCall
	        @param : Response data
         
        */
		_loginCaptchaCall = function(data) {

			if (typeof data === 'object') {

				data = data.content;
				if (data.isSuccess) {

					$('#js-login-form').unbind('submit');
					$('#js-login-form').attr('action', $('#js-login-form').attr('action') + '/j_security_check');
					setTimeout(function() {
						$('#js-login-form').find('.form-button').trigger('click');
					}, 10);

				} else if (data.countryDropdown !== undefined) {
					_countryDropdownUpdator(data.countryDropdown);
				} else if (data.errorMessage === '') 
					location.reload();                            
				else {
					$('.error-div').remove();
					$('#js-login-form')
						.before('<div class="error-div">' + CQ.I18n.getMessage(data.errorMessage) + '</div>')
						.ScrollTo({
							duration: 800,
							offsetTop: 400
						});
				}

				if (data.captchaDetails !== undefined) {
					$('#js-login-form .captcha__image__container')
						.find('img').attr('src', data.captchaDetails.imageUrl).end()
						.find('.js-captcha-id').val(data.captchaDetails.captchaId).end()
						.find('.js-captcha-url').val(data.captchaDetails.imageUrl).end();
				}

			}
		},
		/*
	       	@private method : Handler Function for Country Dropdown
	        @param : Array with Country list
         
        */
		_countryDropdownUpdator = function(countryArray) {

			_cache.$bodyWrapper.data('plugin_analytics').alreadyRegisteredGAPopup();

			_cache.$loginDropdown.removeClass('display-none');

			var textDiv = $('<div class = "comp-rich-text rte-wrapper">' + _objPropertiesMsg.loginFromDifferentCountry + '</div>').css('font-size', 14);
			$('.js-login-dropdown').find(".comp-rich-text").remove();
			$('.js-login-dropdown').append(textDiv);


			var _clonedDropdown = _cache.$countrySelectorSelect.clone(),
				_clonedDropdownoption1 = "<option value='default'>" + _objPropertiesMsg.selectValue + "</option>",
				_clonedDropdownoption2 = $('<option value=""></option>'),
				lengthOfArray = countryArray.length;
			_clonedDropdown.empty();
			_clonedDropdown.append(_clonedDropdownoption1);

			for (var i = 0; i < lengthOfArray; i++) {
				var toAppendOption = _clonedDropdownoption2.clone();
				toAppendOption.attr({
					'value': countryArray[i].ccode
				}).html(countryArray[i].cname);
				_clonedDropdown.append(toAppendOption);
			}
			$('#js-login-form .js-login-dropdown #uniform-countryselector').replaceWith(_clonedDropdown);
			$('#js-login-form .js-login-dropdown #countryselector').val('default').ScrollTo({
				duration: 800,
				offsetTop: 400
			});
			$('#js-login-form .js-login-dropdown #countryselector').uniform().on('change', _countrySelectorAjaxCallHandler);
		},

		/*
	       	@private method : check server side email error if exist then triger click event on create ypur account button
	        @param : none
         
        */
		_checkServerSideEmailExistError = function() { 

			if ($('.error_message_js-reg-step-1').css('display') !== 'none') {
				$('.cq-colctrl-lt0-c1').addClass('login-error-msg');

				$('.mobile-create-btn').trigger('click');

				$(window).load(function() {
					$('.error_message_js-reg-step-1').ScrollTo({
						duration: 800,
						offsetTop: 140
					});
				});


			}



		},

		/*
       		@private method : send ajax call on Selecting country of residence, and show confirm popup on success
        	@param : none
        */

		_countrySelectorAjaxCallHandler = function() {

			_cache.$jsLoginBox.addLoaderPrepend();

			if (typeof $('.body-wrapper').data('plugin_analytics') !== 'undefined') {
				$('.body-wrapper').data('plugin_analytics').alreadyRegisteredCountrySelect();
			}

			var countryParameter = $('#js-login-form .js-login-dropdown #countryselector').find('option:selected').val();

			if (countryParameter === 'default') {
				_ifSelectDefaultValueHandler();
				_cache.$jsLoginBox.removeLoader();
				return (null);
			}
			var objXHR = cartier.ajaxWrapper.getXhrObj({
				type: 'GET',
				url: _objPropertiesPaths.loginCountryDropdown + '?country=' + countryParameter + '&pagePath=' + $('#resourcePath').val() + '&q=123',
				dataType: 'json'
			});
			if (objXHR) {
				objXHR.done(function(data) {
					// handle failure
					if (typeof data.success !== 'undefined' && !data.success) {
						// handle redirectURL exist if the session expires
						// data.redirectURL ?  window.location.href = data.redirectURL : $form.find('.server_message').html(data.errorMessage);
					} else {

						var parsedData = cartier.common.cartierJSONparser({
							json: data
						});

						if (parsedData !== false) {
							if (parsedData.url === '') {
								_noWebsiteHandler();
							} else {
								_saveButtonAjaxCallBack(parsedData.url);
							}
						}
					}
				});
			}
			_cache.$jsLoginBox.removeLoader();

		},


		_countrySelectorAjaxCallHandlerReg = function() {


			var countryParameter = $('#js-reg-step-1 #fn_country').find('option:selected').val();

			if (countryParameter === 'default') {
				return (null);
			}

			/* Ajax caller  */

			var objXHR = cartier.ajaxWrapper.getXhrObj({
				type: 'GET',
				url: _objPropertiesPaths.loginCountryDropdown + '?country=' + countryParameter + '&pagePath=' + $('#resourcePath').val() + '&q=123',
				dataType: 'json'
			});
			if (objXHR) {
				objXHR.done(function(data) {
					// handle failure
					if (typeof data.success !== 'undefined' && !data.success) {
						// handle redirectURL exist if the session expires
						// data.redirectURL ?  win.location.href = data.redirectURL : $form.find('.server_message').html(data.errorMessage);
					} else {
						var parsedData = cartier.common.cartierJSONparser({
							json: data
						});
						if (parsedData !== false) {
							if (parsedData.url === '') {
								//Do nothing
							} else {
								_saveButtonAjaxCallBackReg(parsedData.url);
							}
						}
					}
				});
			}
		},



		_saveButtonAjaxCallBackReg = function(redirectUrl) {
			_cache.$countrySelectorSelect.confirmBox();
			_cache.$countrySelectorSelect.data('plugin_confirmBox').popupInitialize({
					'title': _objPropertiesMsg.countrySelectorTitle,
					'message': _objPropertiesMsg.countrySelectorMsg,
					'buttons': {
						'ok': {
							'buttonName': _objPropertiesMsg.okButton,
							'href': redirectUrl,
							'class': 'cta-button cta-button__inner cta--red'

						},
						'cancel': {
							'buttonName': _objPropertiesMsg.cancelButton,
							'href': '#',
							'class': 'cta-button cta-button__inner cta--grey display-none js-canclebutton'
						}

					}
				},
				_cache.$countrySelectorSelect.data('plugin_confirmBox').confirmHide
			);
			
			$('.popup-close-button').on('click', function(){
				$('.js-canclebutton').trigger('click');
			});

			$($('#confirmButtons button')[0]).on('click', function() {
				location.href = '' + $(this).attr('href') + '';
			});
		},




		
		/*
       @private method : send ajax call on Selecting country of residence, and show confirm popup on success
          @param : none
        */

		_countrySelectorAjaxCallHandler2 = function() {

			_cache.$jsLoginBox.addLoaderPrepend();



			var countryParameter = _cache.$countrySelectorSelect2.find('option:selected').val();

			if (countryParameter === 'default') {
				_ifSelectDefaultValueHandler();
				_cache.$jsLoginBox.removeLoader();
				return (null);
			}

			/* Ajax caller  */

			var objXHR = cartier.ajaxWrapper.getXhrObj({
				type: 'GET',
				url: _objPropertiesPaths.loginCountryDropdown + '?country=' + countryParameter + '&pagePath=' + $('.pagePathforCountry').val() + '&q=123',
				dataType: 'json'
			});



			if (objXHR) {
				objXHR.done(function(data) {
					// handle failure
					if (typeof data.success !== 'undefined' && !data.success) {
						// handle redirectURL exist if the session expires
						// data.redirectURL ?  window.location.href = data.redirectURL : $form.find('.server_message').html(data.errorMessage);
					} else {

						var parsedData = cartier.common.cartierJSONparser({
							json: data
						});

						if (parsedData !== false) {


							if (parsedData.url === '') {
								_noWebsiteHandler();
							} else {
								_saveButtonAjaxCallBack(parsedData.url);
							}


						}
					}
				});
			}
			_cache.$jsLoginBox.removeLoader();

		},
		/*
	       	@private method : Callback Function for Forgot Password AjaxCall
	        @param : Response data
         
        */
		_forgotPasswordCallback = function(data) {

			if (typeof data === "object") {	
				var forgotMessageHtml;
				if (typeof(data.content.isSuccess) !== 'undefined' && data.content.isSuccess) {
					$('.body-wrapper').data('plugin_analytics').forgotPasswordTrue();
					if (data.content.isSuccess === 'true') {
						forgotMessageHtml = '<div class="email-sent js-emailsent-box"><span class="cross-button js-close js-emailsent-conf"></span><div class="js-successdiv"><h3 class="heading3">' + _objPropertiesMsg.forgotPasswordPopupHeading + '</h3><p class="">' + _objPropertiesMsg.forgotPasswordPopupText + ' </p></div><a class="cta-button cta-button__inner cta--red js-emailsent-conf" href="' + data.content.login + '"><span class="input-arrow"></span><span class="cta-button__input">ok</span></a></div>';
					} else {
						forgotMessageHtml = '<div class="email-sent js-emailsent-box"><span class="cross-button js-close js-emailsent-conf"></span><div class="js-failurediv"><h3 class="heading3">' + _objPropertiesMsg.forgotPasswordPopupTextFail + '</h3><p class="">' + _objPropertiesMsg.forgotPasswordPopupTextFail + '</p></div><a class="cta-button cta-button__inner cta--red js-emailsent-conf" href="' + data.content.login + '"><span class="input-arrow"></span><span class="cta-button__input">ok</span></a></div>';
					}
					if (data.success) {
						_cache.$forgotPassWrapper.after(forgotMessageHtml);
						_cache.$forgotPassWrapper.hide();
						_cache.$closeButton.on('click', function() {
							_cache.$emailSendBox.remove();
							_cache.$emailSendBox.hide();
							_cache.$forgotPassWrapper.show();
						});
						_cache.$emailSentConf.on('click', function() {                         
							var currentHost = win.location.protocol + '//' + win.location.host;                         
							win.location = currentHost + data.content.login;                  
						});
					}

				} else {
					var newServerMsgEl = _cache.$errorDivMarkup.text('There was some server error while making this request.');
					_cache.$mainContainer.prepend(newServerMsgEl);

				}
			}
		},


		//--------------------------------------------------------------------------------------------------------
		//         Other Business Logic Functions
		//--------------------------------------------------------------------------------------------------------

		/*
          @private method : login Error Check
          @param : none 
        */

		_loginErrorCheck = function() {
			_cache.$errorMessage.each(function(index, el) {
				if ($(el).html() !== '')
					_cache.$createYourAcc.trigger('click');
			});
		},

		/*
          @private method : To trigger forgot pass link if data-isforgotactive is true
          @param : none
        */


		_loginIsForgotActive = function() {
			if (_cache.$forgotPassLink.data('isforgotactive')) {
				setTimeout(function() {
					_cache.$forgotPassLink.trigger('click');
				}, 10);
			}
		},



		/*
	       @private method : to handle Server Side Error
	       @param : none 
	    */
		_handleServerSideError = function() {
			var errorMessgae = _cache.$loginError.html();
			_cache.$loginError.replaceWith('<span for="j_username" class="error">' + errorMessgae + '</span>');
		},

		/*
	       @private method : to send Post Ajax request for forgot password
	       @param : Form object, URL Link and a callback function 
	    */

		_sendPostRequest = function($form, link, callback) {
			var objXHR = cartier.ajaxWrapper.getXhrObj({
				type: 'POST',
				url: link,
				data: $form.serialize(),
				dataType: 'json',
				contentType: 'application/x-www-form-urlencoded',
				beforeSend: function(jqXHR) {
					if (!$form.valid()) {
						jqXHR.abort();
					}
					// return false to cancel submit 
				}
			});
			if (objXHR) {
				objXHR.done(function(data) {
					// handle failure
					if (typeof data.success !== 'undefined' && !data.success) {

					} else { // handle success
						var data = cartier.common.cartierJSONparser({
							json: data
						});
						callback(data);
					}
				});
			}
			return false;
		},

		/*
	       @private method : to send Post Ajax request for Request Captcha
	       @param : Form object, URL Link and a callback function 
	    */
		_createCheck = function() {
			var patt = new RegExp("viewcreate=true");
			var res = patt.test(window.location.search);

			if (res) {

				setTimeout(function() {

					$('.mobile-create-btn').ScrollTo({
						duration: 800,
						offsetTop: 0
					}).trigger('click');

				}, 1000);

			};
		},


		_sendPostRequestCapcha = function($form, link, callback) {
			var objXHR = cartier.ajaxWrapper.getXhrObj({
				type: 'POST',
				url: link,
				data: $form.serialize(),
				dataType: 'json',
				contentType: 'application/x-www-form-urlencoded',
				beforeSend: function(jqXHR) {
					if (!$form.valid()) {
						jqXHR.abort();
					}
					// return false to cancel submit 
				}
			});
			if (objXHR) {
				objXHR.done(function(data) {
					// handle failure
					if (typeof data.success !== 'undefined' && !data.success) {} else { // handle success
						var data = cartier.common.cartierJSONparser({
							json: data
						});
						callback(data);
					}
				});
			}
			return false;
		},

		/*
	       @private method : Function to Check Password Error message and Toggle Hide/show
	       @param : none
	    */

		_checkPasswordError = function() {
			setTimeout(function() {
				if (_cache.$passwordCheckButton.hasClass('error')) {
					_cache.$loginBoxListInput.addClass('error');
				} else {
					_cache.$loginBoxListInput.removeClass('error');
				}
			}, 10);

		},

		already_exists = function() {

			if ($('#accountExistsFlag').val() === 'true') {
				$('#registration_j_username').addClass('error');
			} else {
				$('#registration_j_username').removeClass('error');
			}

		};



	//--------------------------------------------------------------------------------------------------------
	//          Public functions
	//--------------------------------------------------------------------------------------------------------


	/*
     @pubic method : initailize the module
    */
	login.init = function() {
		RICHEMONT.AjaxCaller.listOfCallbackFun.CaptchaAction = _loginCaptchaCall;
		RICHEMONT.AjaxCaller.listOfCallbackFun.ForgotPasswordAction = _forgotPasswordCallback;

		_objPropertiesMsg = cartier.properties.messages;
		_objPropertiesPaths = cartier.properties.paths;
		//caching the jquery objects
		_cacheObjects();

		_checkServerSideEmailExistError();
		_handleServerSideError();

		_bindEvents();

		_loginErrorCheck();

		/* For handling Login Display Logic for .com Websites*/

		if (_cache.$jsLoginBox.data('com') === true) {
			_dotComHandler();
		}

		_loginIsForgotActive();

		_createCheck();

		if ($('.js-reg-step-1').length > 0) {
			already_exists();
		}


		if ($('.js-dotcomcheck').length)
			$('.Connection').addClass('display-none');

	};

}(window, jQuery, cartier.login));